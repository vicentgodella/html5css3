section
  h2 Legacy mobile 
  pre
    code.
      &lt;link rel="stylesheet" media="handheld">

section.browser-support-container
  mixin browserSupport('All', '3.5+', 'All', '9+', '9.5+')
  h2 New media queries
  pre
    code.
      @media only screen and (width: 600px) {
        .class {
          background: #ccc;
        }
      }
  pre
    code.
      &lt;link rel="stylesheet" href="small.css" 
          media="only screen and (height: 300px)">

section
  h2 max-width
  .row-fluid
  .span6
    pre
      code.
        /* Default CSS */

        @media (max-width: 900px) {
          /* Small */
          ...
        }
        @media (max-width: 480px) {
          /* Very small */
          ...
        }
  .span6.fragment
    pre
      code.
        /* Mobile first */

        @media (min-width: 480px) {
          /* Large */
          ...
        }
        @media (min-width: 900px) {
          /* Larger */
          ...
        }

section
  h2 Viewport
  p Space available for the layout
  p AKA browser window width
  .viewport-example
    h6.ipsum Lorem ipsum and stuff...
    .row-fluid
      .span8
        p.ipsum.read-block Cabbage groundnut caulie celery wakame kombu broccoli pea sprouts mustard artichoke asparagus scallion dulse summer purslane. 
        p.ipsum.read-block Avocado lotus root carrot gumbo yarrow azuki bean lentil beet greens scallion celery fennel pea.
      .span3.offset1
        .picture.red-bg

section
  h2 Mobile viewports
  p <b>Visible viewport</b> vs <b>Layout viewport</b>
  .viewport-example
    .visible-viewport
    h6.ipsum Lorem ipsum and stuff...
    .row-fluid
      .span8
        p.ipsum.read-block Cabbage groundnut caulie celery wakame kombu broccoli pea sprouts mustard artichoke asparagus scallion dulse summer purslane. 
        p.ipsum.read-block Avocado lotus root carrot gumbo yarrow azuki bean lentil beet greens scallion celery fennel pea.
      .span3.offset1
        .picture.red-bg

section
  h2 Initial size
  p Disable default layout viewport (between 800 and 1000px)

  pre
    code.
      #{'<meta name="viewport" content="width=device-width">'}

section
  h2 Mobile phones lie
  .row-fluid(style="margin-top: 40px;")
    .span2.offset2
      .viewport-mobile-example
        h6.ipsum Lorem ipsum and stuff...
        .row-fluid
          .span9
            p.ipsum.read-block Cabbage groundnut caulie celery wakame kombu broccoli pea sprouts mustard artichoke asparagus scallion dulse summer purslane.
          .span3
            .picture.red-bg
    .span7
      ul.small-text
        li
          p Low-cost smartphone:
          p Screen <b>240×320</b>, reports <b>320×427</b>
        li
          p High density display:
          p Screen <b>640×960</b>, reports <b>320×480</b>
        li.fragment Don't try pixel perfect!

section
  h2 Use just min-width and max-width
  p Inconsistent or just not useful:
  p <b>device-width, orientation, aspect-ratio</b>

section(data-state="lab")
  h2 Lab: Media Queries
  p Use media queries with CSS

section
  h2 Responsive web design
  ul
    li Media queries
    li Fluid layout

section
  h2 Fluid grids
  p Keep everything relative
  .row-fluid
    .span5.row-fluid.offset1
      .span8
        div(style="height: 200px;").red-bg
      .span4
        div(style="height: 250px;").green-bg
    .span2(style="background: url(assets/svg/arrow.svg) no-repeat center center;\
      background-size: 80%;\
      height: 200px")

    .span3.row-fluid
      .span8
        div(style="height: 200px;").red-bg
      .span4
        div(style="height: 250px;").green-bg

section
  h2 Fluid grids
  p Keep everything relative

  ul
    li <b>Percentages for lengths</b> (keep in mind the margin/padding)
    li Limit the flexibility using <b>max-width/min-width or overflow</b>

  pre
    code.
      .two-columns {
        width: 46%;
        margin-left: 2%;
        min-width: 100px;
      }

section
  h2 Flexible images
  p Use max-width: 100%
  style.
    #flexible-images-example .parent {
      height: 300px;
      width: 80%;
      margin: auto auto;
      padding: 20px 10px;
      box-sizing: border-box;
    }
    #flexible-images-example img {
      display: block;
      max-width: none;
    }
    #flexible-images-example p {
      font-size: 14px;
      color: white;
      text-align: left;
    }
  #flexible-images-example

    .row-fluid
      .span4
        .parent(style="background: darkgray;")
          p Original size (width=100px)
          img(src="assets/svg/blank-image.svg", width="130px")
      .span2.fragment
        .parent.red-bg
          p width=100px
          img(src="assets/svg/blank-image.svg", width="130px")
      .span2.fragment
        .parent.red-bg
          p width=50%
          img(src="assets/svg/blank-image.svg", width="50%")
      .span2.fragment
        .parent.green-bg
          p max-width=100%
          img(src="assets/svg/blank-image.svg", width="100%", style="margin: 0;")

section
  h2 Center background
  pre
    code.
      .illustration {
        background: url(someimage.png) no-repeat 50% 0;
      }
  style.
    #responsive-image-centered > .responsive-image {
      background: url(assets/raster/lens.jpg) no-repeat 50% 0;
      height: 400px;
      margin-right: 20px;
      display: inline-block;
    }
  #responsive-image-centered
    .responsive-image(style="width: 385px")
    .responsive-image(style="width: 235px")
    .responsive-image(style="width: 105px")
  a(href="http://commons.wikimedia.org/wiki/File:Lens_Nikkor_50mm.jpg").source Picture from Wikimedia Commons

section
  h2 SVG
  p XML based vector graphics
  pre
    code.
      #{'<defs>'}
        #{'<linearGradient y2="100%" id="our-gradient">'}
          #{'<stop offset="30%" stop-color="#fff"></stop>'}
          #{'<stop offset="70%" stop-color="#a34"></stop>'}
        #{'</linearGradient>'}
      #{'</defs>'}

      #{'<circle cx="100" cy="100" r="80" fill="url(#our-gradient)" stroke="#a34" stroke-width="5"></circle>'}
  svg(version="1.1", height="200", width="200")
    defs
      linearGradient(y2="100%")#our-gradient
        stop(offset="30%", stop-color="#fff")
        stop(offset="70%", stop-color="#a34")
    circle(cx="100", cy="100", r="80", fill="url(#our-gradient)", stroke="#a34", stroke-width="5")

section
  mixin browserSupport('4+', '4+', '5+', '9+', '9.5+')
  h2 SVG
  p.read-block Suitable for <b>simple images</b>
  p.read-block Support in mobile is <b>limited</b>
  style.
    .html5bg {
      background: url(assets/svg/html5.svg) no-repeat; 
      background-size: contain; 
      height: 300px;
      margin-top: 10px;
    }
  .row-fluid
    .offset1.span1.html5bg
    .span2.html5bg
    .span4.html5bg

section
  h2 How to use SVG
  p as &lt;img>:
  pre
    code.
      #{'<img src=”diagram.svg”>'}

  p as CSS background:
  pre
    code.
      .diagram {
        background-image: url(diagram.svg);
      }

  p inline:
  pre
    code.
      &lt;svg height=86 width=90 viewBox="5 9 90 86" style="float: right;">
        #{'<path stroke=#F53F0C ... />'}
        #{'<line stroke-width=10 ... />'}
      #{'</svg>'}

section
  section
    h2 Media queries
    p When fluid is not enough
    .row-fluid
      pre.span6
        code.
          &nbsp;
            nav li {
              display: inline-block;
            }

            aside {
              float: left;
            }

      pre.span6
        code.
          @media(max-width: 500px) {
            nav li {
              display: block;
            }

            aside {
              float: none;
            }
          }

  section
    h2 Media queries
    iframe(src="assets/html/rwd.html", width="70%", height="400px")
    iframe(src="assets/html/rwd.html", width="30%", height="400px")

section
  h2 Screen sizes
  img(src="assets/raster/screen-stats.png")

section
  h2 Goldilocks approach
  p Keep it <b>simple</b>: Big, Right, Small
  
  style
    #goldilocks-example > div {
      background-image: url(assets/raster/responsive-sprite.jpg);
      font-size: 50px;
      text-transform: uppercase;
      color: #ccc;
      overflow: hidden;
      height: 400px;
      margin-right: 20px;
      display: inline-block;
    }
    .goldilocks-big {
      width: 385px;
    }
    .goldilocks-right {
      width: 235px;
      background-position: -400px 0;
    }
    .goldilocks-small {
      width: 105px;
      background-position: -635px 0;
    }

  .row-fluid#goldilocks-example
    .goldilocks-big 
    .goldilocks-right 
    .goldilocks-small 

section
  h2 Responsive text
  p No such thing yet!
  #ex-responsive-text(style="background:none")
    p Resize any slide

section
  h2 Optimize images
  p Serving different images for different displays
  pre
    code.
      .block {
        background: url('funny_bg.jpg');
      }

      @media (max-width: 450px) {
        .block {
          background: url('funny_bg_low_res.jpg');
        }
      }

section
  section
    h2 High density displays
    p Pixel density above 200 PPI
    ul.small-text 
      li iPhone4 (326)
      li iPad3 (264)
      li Galaxy Nexus (316)
      li Galaxy SIII (306)

  section
    h2 device-pixel-ratio
    p High density and retina displays:
    pre
      code.css.
        @media only screen and (min--moz-device-pixel-ratio: 2),
        only screen and (-o-min-device-pixel-ratio: 2/1),
        only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (min-device-pixel-ratio: 2) {

          .mybg {
            background-image: url(imgx2.jpg);
          }

        }
    p Should consider change how text renders:
    p.read-block <b>text-rendering:</b>  auto, optimizeSpeed, optimizeLegibility, geometricPrecision, inherit

section
  h2 Duplicate downloads
  p Cascade override fails in Android 3- and mobile Safari 4
  pre
    code.
      @media (min-width: 500px) {
        .my-component {
          background-image: url('large-logo.png')
        }
      }

      @media (max-width: 500px) {
        .my-component {
          background-image: url('tiny-logo.png')
        }
      }


  a(href="http://timkadlec.com/2012/04/media-query-asset-downloading-results/").source TimKadlec.com

section
  h2 Responsive images
  p Using cookies

  pre
    code.
      &lt;img src="picture.jpg" data-large="picture-large.jpg">
      &lt;script>
        document.cookie ="dimensions=" + screen.width + "x" + screen.height;
      &lt;/script>
  p Using noscript

  pre
    code.
      &lt;noscript data-img="picture-default.jpg" data-imgsmall="picture-small.jpg">
        #{'<img src="picture-default.jpg">'}
      #{'</noscript>'}

      &lt;script>
        $('noscript[data-img]').replaceWith(getImage(this));
      &lt;/script>

section
  h2 Responsive Bootstrap
  pre
    code.
      #{'<'}div class="<b>row-fluid</b>">
          #{'<div class="span2">Fee</div>'}
          #{'<div class="span2">Fi</div>'}
          #{'<div class="span2">Fo</div>'}
          #{'<div class="span3 offset3">Fum!!</div>'}
      #{'</div>'}
  pre
    code.
      .row-fluid .span2 {
        width: 14.52991452991453%;
      }
section
  section
    h2 Responsive Bootstrap
    p Several media queries implemented
    p 0 – 480px – 768px – 980px – 1200px
    p Try resizing this window
    pre
      code.
        #{'<'}link href="<b>bootstrap-responsive.css</b>" rel="stylesheet">
    style
      @media (max-width: 600px) {
        #ex-bootstrap-rwd .grid-block {
          float: none;
          width: 100%;
          margin-left: 0;
        }
      } 
    #ex-bootstrap-rwd
      .row-fluid
        .span2.grid-block Fee
        .span2.grid-block Fi
        .span1.grid-block.offset2 Fo
        .span4.grid-block Fum!

section(data-state="lab")
  h2 Lab: Responsive design
  p Make a web page responsive