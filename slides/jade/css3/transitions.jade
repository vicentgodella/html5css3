section.browser-support-container
  mixin browserSupport('All', '4+', 'All', 'No', 'No')
  h2 Transitions

  p CSS transitions make properties change smoothly over the specified time.

  pre
    code.
      a {
        -webkit-transition:   font-size 1s ease-in;
        -moz-transition:      font-size 1s ease-in;
        transition:           font-size 1s ease-in;
      }

      a:hover, a:focus {
        font-size: 200%;
      }
  style
    #ex-transitions {
      height: 100px;
    }
    #ex-transitions a {
      line-height: 100px;
    }
    #ex-transitions .smooth {
      -webkit-transition: font-size 1s ease-in;
      -moz-transition: font-size 1s ease-in;
      transition: font-size 1s ease-in;
    }

    #ex-transitions a:hover {
      font-size: 200%;
    }
  #ex-transitions.row-fluid(style="background:none;")
    .span6
      a Hover
    .span6
      a.smooth  Hover

section
  h2 transition

  p {property} {duration} {timing function} {delay} <br>
    | {transition1}, {transition2}, ...

  pre
    code.
      a {
        -webkit-transition:   color 1s ease-in,
                              background .3s ease;
        -moz-transition:      color 1s ease-in,
                              background .3s ease;
        transition:           color 1s ease-in,
                              background .3s ease;
      }

section
  h2 all

  pre
    code.
      a {
        transition: all .3s linear;
      }

      a:hover, a:focus {
        color: #030;
        background: #690;
      }

section
  h2 transition-timing-function

  p default | linear | ease | <b>ease-in | ease-out | ease-in-out</b> | cubic-bezier(x1, y1, x2, y2)

  #ex-timing-functions(style="background:none; color:#555")
    style

      #ex-timing-functions .cont {
        width: 90%;
        margin-left: auto;
        margin-right: auto;
      }

      #ex-timing-functions .cont .block {
        background-color: #eee;
        border-radius: 5px;
        width: 20%;
        font-size: 50%;
        margin-bottom: 5px;

        -webkit-transition: all 1s;
      }

      #ex-timing-functions .cont:hover .block {
        width: 100%;
        background-color: #edd;
        border-radius: 10px;
      }

      #ex-timing-functions .cont .linear {
        -webkit-transition-timing-function: linear;
      }

      #ex-timing-functions .cont .ease-in {
        -webkit-transition-timing-function: ease-in;
      }

      #ex-timing-functions .cont .ease-out {
        -webkit-transition-timing-function: ease-out;
      }

      #ex-timing-functions .cont .ease-io {
        -webkit-transition-timing-function: ease-in-out;
      }

      #ex-timing-functions .cont .bezier {
        -webkit-transition-timing-function: cubic-bezier(0,1,1,0);
      }

    .cont
      .block Default
      .block.linear Linear
      .block.ease-in Ease-in
      .block.ease-out Ease-out
      .block.ease-io Ease-io
      .block.bezier Bezier
  a(href="http://www.the-art-of-web.com/css/timing-function/").source Source: The Art of the Web

section
  h2 transition-delay

  p If two time lapses are given, the second one corresponds to the delay

  pre
    code.
      a {
        transition: font-size .5s ease-in 1s;
      }
  style.
    #ex-transition-delay a:hover {
      font-size: 200%;
    }
    #ex-transition-delay > .not-delayed > a {
      -webkit-transition: font-size .5s ease-in;
    }
    #ex-transition-delay > .delayed > a {
      -webkit-transition: font-size .5s 1s ease-in;
    }

  #ex-transition-delay(style="background:none")
    p.not-delayed Without delay: <a>Link1</a> <a>Link2</a> <a>Link3</a> <a>Link4</a> <a>Link5</a>
    p.delayed With delay: <a>Link1</a> <a>Link2</a> <a>Link3</a> <a>Link4</a> <a>Link5</a>

section
  h2 Animatable properties

  p background, border, position, color, font, size,
  p margin, padding, opacity, transformation,
  p z-index, zoom

section
  h2 CSS transition or JavaScript animation?

  .row-fluid
    .span6
      p.read-block <b>CSS Transitions</b>
      ul
        li Declared in the CSS
        li Simpler syntax
        li Accelerated by hardware
        li The animation is transparently interrupted (hover out)
    .span6
      p.read-block <b>jQuery animate()</b>
      ul.read-block
        li Not limited to simple animations
        li Supports all browsers